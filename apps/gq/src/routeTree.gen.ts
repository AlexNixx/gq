/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const SettingsRouteLazyImport = createFileRoute('/_settings')()
const MenuRouteLazyImport = createFileRoute('/_menu')()
const AuthRouteLazyImport = createFileRoute('/_auth')()
const AppsRouteLazyImport = createFileRoute('/_apps')()
const MenuMenuRouteLazyImport = createFileRoute('/_menu/menu')()
const AuthLoginRouteLazyImport = createFileRoute('/_auth/login')()
const AppsMediaRouteLazyImport = createFileRoute('/_apps/media')()
const AppsFeedbackRouteLazyImport = createFileRoute('/_apps/feedback')()
const AppsDashboardRouteLazyImport = createFileRoute('/_apps/dashboard')()
const AppsAnalyticsRouteLazyImport = createFileRoute('/_apps/analytics')()
const AuthRegistrationIndexLazyImport = createFileRoute(
  '/_auth/registration/',
)()
const SettingsSettingsPoliciesRouteLazyImport = createFileRoute(
  '/_settings/settings/policies',
)()
const SettingsSettingsGeneralRouteLazyImport = createFileRoute(
  '/_settings/settings/general',
)()
const SettingsSettingsBusinessProfileRouteLazyImport = createFileRoute(
  '/_settings/settings/business-profile',
)()
const SettingsSettingsBusinessInformationRouteLazyImport = createFileRoute(
  '/_settings/settings/business-information',
)()
const SettingsSettingsAppearanceRouteLazyImport = createFileRoute(
  '/_settings/settings/appearance',
)()

// Create/Update Routes

const SettingsRouteLazyRoute = SettingsRouteLazyImport.update({
  id: '/_settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_settings/route.lazy').then((d) => d.Route),
)

const MenuRouteLazyRoute = MenuRouteLazyImport.update({
  id: '/_menu',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_menu/route.lazy').then((d) => d.Route))

const AuthRouteLazyRoute = AuthRouteLazyImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_auth/route.lazy').then((d) => d.Route))

const AppsRouteLazyRoute = AppsRouteLazyImport.update({
  id: '/_apps',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_apps/route.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MenuMenuRouteLazyRoute = MenuMenuRouteLazyImport.update({
  path: '/menu',
  getParentRoute: () => MenuRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_menu/menu/route.lazy').then((d) => d.Route),
)

const AuthLoginRouteLazyRoute = AuthLoginRouteLazyImport.update({
  path: '/login',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/login/route.lazy').then((d) => d.Route),
)

const AppsMediaRouteLazyRoute = AppsMediaRouteLazyImport.update({
  path: '/media',
  getParentRoute: () => AppsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_apps/media/route.lazy').then((d) => d.Route),
)

const AppsFeedbackRouteLazyRoute = AppsFeedbackRouteLazyImport.update({
  path: '/feedback',
  getParentRoute: () => AppsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_apps/feedback/route.lazy').then((d) => d.Route),
)

const AppsDashboardRouteLazyRoute = AppsDashboardRouteLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => AppsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_apps/dashboard/route.lazy').then((d) => d.Route),
)

const AppsAnalyticsRouteLazyRoute = AppsAnalyticsRouteLazyImport.update({
  path: '/analytics',
  getParentRoute: () => AppsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_apps/analytics/route.lazy').then((d) => d.Route),
)

const AuthRegistrationIndexLazyRoute = AuthRegistrationIndexLazyImport.update({
  path: '/registration/',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/registration/index.lazy').then((d) => d.Route),
)

const SettingsSettingsPoliciesRouteLazyRoute =
  SettingsSettingsPoliciesRouteLazyImport.update({
    path: '/settings/policies',
    getParentRoute: () => SettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_settings/settings/policies/route.lazy').then(
      (d) => d.Route,
    ),
  )

const SettingsSettingsGeneralRouteLazyRoute =
  SettingsSettingsGeneralRouteLazyImport.update({
    path: '/settings/general',
    getParentRoute: () => SettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_settings/settings/general/route.lazy').then(
      (d) => d.Route,
    ),
  )

const SettingsSettingsBusinessProfileRouteLazyRoute =
  SettingsSettingsBusinessProfileRouteLazyImport.update({
    path: '/settings/business-profile',
    getParentRoute: () => SettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_settings/settings/business-profile/route.lazy').then(
      (d) => d.Route,
    ),
  )

const SettingsSettingsBusinessInformationRouteLazyRoute =
  SettingsSettingsBusinessInformationRouteLazyImport.update({
    path: '/settings/business-information',
    getParentRoute: () => SettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_settings/settings/business-information/route.lazy').then(
      (d) => d.Route,
    ),
  )

const SettingsSettingsAppearanceRouteLazyRoute =
  SettingsSettingsAppearanceRouteLazyImport.update({
    path: '/settings/appearance',
    getParentRoute: () => SettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_settings/settings/appearance/route.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_apps': {
      preLoaderRoute: typeof AppsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_menu': {
      preLoaderRoute: typeof MenuRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_settings': {
      preLoaderRoute: typeof SettingsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_apps/analytics': {
      preLoaderRoute: typeof AppsAnalyticsRouteLazyImport
      parentRoute: typeof AppsRouteLazyImport
    }
    '/_apps/dashboard': {
      preLoaderRoute: typeof AppsDashboardRouteLazyImport
      parentRoute: typeof AppsRouteLazyImport
    }
    '/_apps/feedback': {
      preLoaderRoute: typeof AppsFeedbackRouteLazyImport
      parentRoute: typeof AppsRouteLazyImport
    }
    '/_apps/media': {
      preLoaderRoute: typeof AppsMediaRouteLazyImport
      parentRoute: typeof AppsRouteLazyImport
    }
    '/_auth/login': {
      preLoaderRoute: typeof AuthLoginRouteLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
    '/_menu/menu': {
      preLoaderRoute: typeof MenuMenuRouteLazyImport
      parentRoute: typeof MenuRouteLazyImport
    }
    '/_settings/settings/appearance': {
      preLoaderRoute: typeof SettingsSettingsAppearanceRouteLazyImport
      parentRoute: typeof SettingsRouteLazyImport
    }
    '/_settings/settings/business-information': {
      preLoaderRoute: typeof SettingsSettingsBusinessInformationRouteLazyImport
      parentRoute: typeof SettingsRouteLazyImport
    }
    '/_settings/settings/business-profile': {
      preLoaderRoute: typeof SettingsSettingsBusinessProfileRouteLazyImport
      parentRoute: typeof SettingsRouteLazyImport
    }
    '/_settings/settings/general': {
      preLoaderRoute: typeof SettingsSettingsGeneralRouteLazyImport
      parentRoute: typeof SettingsRouteLazyImport
    }
    '/_settings/settings/policies': {
      preLoaderRoute: typeof SettingsSettingsPoliciesRouteLazyImport
      parentRoute: typeof SettingsRouteLazyImport
    }
    '/_auth/registration/': {
      preLoaderRoute: typeof AuthRegistrationIndexLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AppsRouteLazyRoute.addChildren([
    AppsAnalyticsRouteLazyRoute,
    AppsDashboardRouteLazyRoute,
    AppsFeedbackRouteLazyRoute,
    AppsMediaRouteLazyRoute,
  ]),
  AuthRouteLazyRoute.addChildren([
    AuthLoginRouteLazyRoute,
    AuthRegistrationIndexLazyRoute,
  ]),
  MenuRouteLazyRoute.addChildren([MenuMenuRouteLazyRoute]),
  SettingsRouteLazyRoute.addChildren([
    SettingsSettingsAppearanceRouteLazyRoute,
    SettingsSettingsBusinessInformationRouteLazyRoute,
    SettingsSettingsBusinessProfileRouteLazyRoute,
    SettingsSettingsGeneralRouteLazyRoute,
    SettingsSettingsPoliciesRouteLazyRoute,
  ]),
])

/* prettier-ignore-end */
